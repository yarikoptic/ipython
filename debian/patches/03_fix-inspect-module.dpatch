#! /bin/sh /usr/share/dpatch/dpatch-run
## 03_fix-inspect-module.dpatch by Fernando Perez <fperez.net@gmail.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: This is a crude fix for bugs in python 2.3's inspect module. We
## DP: simply monkeypatch inspect with code copied from python 2.4.

@DPATCH@
diff -Nur ipython-0.7.2.orig/IPython/OInspect.py ipython-0.7.2/IPython/OInspect.py
--- ipython-0.7.2.orig/IPython/OInspect.py	2006-05-26 09:52:53.000000000 +0200
+++ ipython-0.7.2/IPython/OInspect.py	2006-08-10 18:33:24.000000000 +0200
@@ -30,6 +30,7 @@
 import StringIO
 import types
 import os
+import sys
 # IPython's own
 from IPython import PyColorize
 from IPython.genutils import page,indent,Term,mkdict
@@ -38,6 +39,45 @@
 from IPython.ColorANSI import *
 
 #****************************************************************************
+# HACK!!! This is a crude fix for bugs in python 2.3's inspect module.  We
+# simply monkeypatch inspect with code copied from python 2.4.
+if sys.version_info[:2] == (2,3):
+    from inspect import ismodule, getabsfile, modulesbyfile
+    def getmodule(object):
+        """Return the module an object was defined in, or None if not found."""
+        if ismodule(object):
+            return object
+        if hasattr(object, '__module__'):
+            return sys.modules.get(object.__module__)
+        try:
+            file = getabsfile(object)
+        except TypeError:
+            return None
+        if file in modulesbyfile:
+            return sys.modules.get(modulesbyfile[file])
+        for module in sys.modules.values():
+            if hasattr(module, '__file__'):
+                modulesbyfile[
+                    os.path.realpath(
+                            getabsfile(module))] = module.__name__
+        if file in modulesbyfile:
+            return sys.modules.get(modulesbyfile[file])
+        main = sys.modules['__main__']
+        if not hasattr(object, '__name__'):
+            return None
+        if hasattr(main, object.__name__):
+            mainobject = getattr(main, object.__name__)
+            if mainobject is object:
+                return main
+        builtin = sys.modules['__builtin__']
+        if hasattr(builtin, object.__name__):
+            builtinobject = getattr(builtin, object.__name__)
+            if builtinobject is object:
+                return builtin
+
+    inspect.getmodule = getmodule
+
+#****************************************************************************
 # Builtin color schemes
 
 Colors = TermColors  # just a shorthand
